package Com.Fuwu.MobileIM.Model;

option java_package = "Com.Fuwu.MobileIM.Model"; 

message AuthenticationRequest {
       optional string userName = 1; //用户账号
       optional string password = 2; //登录密码
}

message AuthenticationResponse {
       optional bool isSucceed = 1;
       optional int32 userId = 2; //用户ID
       optional string token = 3; //用户Token
       optional int32 passwordFailCount = 4; //密码错误次数
       optional ErrorCodeType errorCode = 5; //错误类型（枚举）
       enum ErrorCodeType { //错误类型枚举类
           BadRequest = 1; //序列化参数出错
           InvalidUserName = 2; //用户账号有误
           InvalidPassword = 3; //用户密码有误
           InvalidPasswordExceedCount = 4; //密码错误次数超出限定次数
           NotActivate = 5; //用户未激活
       };
}

message UnAuthenticationRequest {
       optional string token = 1; //用户token
       optional int32 userId = 2; //用户ID
}

message UnAuthenticationResponse {
       optional bool isSucceed = 1;
       optional int32 userId = 2;
       optional ErrorCodeType errorCode = 3; //错误类型（枚举）
       enum ErrorCodeType { //错误类型枚举类
           BadRequest = 1; //序列化参数出错
           InvalidUserId = 2; //UserId参数有误
           InvalidToken = 3; //Token参数有误
           InvalidUser = 4; //身份验证失败
           InvalidDatabase = 5; //数据库连接错误
       };
}

message Contact {
       optional int32 contactId = 1;
       optional string name = 2;
       optional string customName = 3;
       optional string pinyin = 4;
       optional bool isBlocked = 5;
       optional string lastContactTime = 6;
       optional GenderType gender = 7; // ContactSourceType的值的累加
       optional int32 source = 8;
       optional string tileUrl = 9;
       optional bool isProvider = 10;
       optional string lisence = 11;
       optional string individualResume = 12;

       enum GenderType {
           Male = 0; //男
           Female = 1; //女
           Privacy = 2; //保密
       };

       //enum ContactSourceType {
       //Message = 0;
       //OrderFrom = 1;
       //OrderTo = 2;
       //SubscribeFrom = 4;
       //SubscribeTo = 8;
       //};
}

message ContactRequest {
       optional string token = 1;
       optional int32 userId = 2;
       optional string timeStamp = 3;
}

message ContactResponse {
       optional bool isSucceed = 1;
       repeated Contact contacts = 2;
       optional string timeStamp = 3;
}

message BlockContactRequest {
       optional string token = 1;
       optional int32 userId = 2;
       optional int32 contactId = 3;
       optional bool isBlocked = 4; 
}

message BlockContactResponse {
       optional bool isSucceed = 1;
       optional int32 contactId = 2;
       optional bool isBlocked = 3; 
}

message ContactDetailRequest {
       optional string token = 1;
       optional int32 userId = 2;
       optional int32 contactId = 3;
}

message ContactDetailResponse {
       optional bool isSucceed = 1;
       optional Contact contact = 2;
}

message ChangeContactDetailRequest {
       optional string token = 1;
       optional int32 userId = 2;
       optional Contact contact = 3;
}

message ChangeContactDetailResponse {
       optional bool isSucceed = 1;
       optional Contact contact = 2;
}

message Profile {
       optional int32 userId = 1;
       optional string name = 2;
       optional string nickName = 3;
       optional GenderType gender = 4;
       optional string mobilePhoneNum = 5;
       optional string email = 6;
       optional string birthday = 7;
       optional string tileUrl = 8;
       optional bool isProvider = 9;
       optional string lisence = 10;

       enum GenderType {
           Male = 0; //男
           Female = 1; //女
           Privacy = 2; //保密
       };
}

message ProfileRequest {
       optional string token = 1;
       optional int32 userId = 2;
}

message ProfileResponse {
       optional bool isSucceed = 1;
       optional Profile profile = 2;
}

message ChangeProfileRequest {
       optional string token = 1;
       optional int32 userId = 2;
       optional string signature = 3; //个性签名
       optional bytes tiles = 4; //头像
       optional string contentType = 5; //图片类型
       optional string nickName = 6; //昵称
}

message ChangeProfileResponse {
       optional bool isSucceed = 1;
       optional Profile profile = 2;
}

message Message {
       optional int32 userId = 1;
       optional int32 contactId = 2;
       optional ContentType contentType = 3; 
       optional string content = 4;
       optional string sendTime = 5;
       optional ImageType imageType = 6;
       optional bytes binaryContent= 7;

       enum ContentType {
             Text = 0;
             Image = 1;
       };

       enum ImageType{
             JPG = 0;
             PNG = 1;
             GIF = 2;
       };
}

message MessageList {
       optional int32 contactId = 1;
       repeated Message messages = 2;
}

message MessageRequest {
       optional string token = 1;
       optional int32 userId = 2;
       optional string timeStamp = 3;
}

message MessageResponse {
       optional bool isSucceed = 1;
       repeated MessageList messageLists = 2;
       optional string timeStamp = 3;
}

message SendMessageRequest {
       optional string token = 1;
       optional int32 userId = 2;
       optional Message message = 3;
}

message SendMessageResponse {
       optional bool isSucceed = 1;
       optional string sendTime = 2;
       optional int32 errorCode = 3;
}

message RegisterRequest {
       optional string mobilePhoneNumber = 1; //手机号码
       optional string password = 2; //密码
       optional string passwordConfirm = 3; //确认密码
       optional string validateCode = 4; //验证码
}

message RegisterResponse {
       optional bool isSucceed = 1;
       optional int32 userId = 2;
       optional string token = 3;
       optional ErrorCodeType errorCode = 4; //错误类型（枚举）
       enum ErrorCodeType { //错误类型枚举类
           BadRequest = 1; //序列化参数出错
           InvalidDatabase = 2; //数据库连接错误
           InvalidMobilePhoneNumber = 3; //手机号码有误
           ExistingUserYes = 4; //用户已存在
           InvalidPassword = 5; //密码有误
           InvalidConfirmPassword = 6; //确认密码有误
           InvalidMatchPassword = 7; //两次密码不一致
           InvalidValidateCode = 8; //验证码有误
       };
}

message ChangePasswordRequest {
       optional string token = 1; //用户token
       optional int32 userId = 2; //用户ID
       optional string validateCode = 3; //验证码
       optional string originalPassword = 4; //旧密码
       optional string password = 5; //新密码
       optional string passwordConfirm = 6; //确认新密码
}

message ChangePasswordResponse {
       optional bool isSucceed = 1;
       optional ErrorCodeType errorCode = 2;//错误类型（枚举）
       enum ErrorCodeType { //错误类型枚举类
           BadRequest = 1; //序列化参数出错
           InvalidUserId = 2; //UserId参数有误
           InvalidToken = 3; //Token参数有误
           InvalidUser = 4; //身份验证失败
           InvalidDatabase = 5; //数据库连接错误
           ExistingUserNo = 6; //用户不存在
           InvalidOriginalPassword = 7; //旧密码有误
           InvalidPassword = 8; //新密码有误
           InvalidConfirmPassword = 9; //确认密码有误
           InvalidMatchPassword = 10; //两次新密码不一致
           InvalidValidateCode = 11; //验证码有误
       };
}

message ResetPasswordRequest {
       optional string phoneNumber = 1; //手机号码
       optional string validateCode = 2; //验证码
       optional string password = 3; //密码
       optional string passwordConfirm = 4; //确认密码
}

message ResetPasswordResponse {
       optional bool isSucceed = 1;
       optional ErrorCodeType errorCode = 2;//错误类型（枚举）
       enum ErrorCodeType { //错误类型枚举类
           BadRequest = 1; //序列化参数出错
           InvalidDatabase = 2; //数据库连接错误
           InvalidPhoneNumber = 3; //手机号码有误
           InvalidPassword = 4; //密码有误
           InvalidPasswordConfirm = 5; //确认密码有误
           InvalidMatchPassword = 6; //两次密码不一致
           InvalidValidateCode = 7; //验证码有误
           ExistingUserNo = 8; //用户不存在
       };
}

message ValidateCodeRequest {
       optional string phoneNumber = 1; //手机号码
       optional ValidateType type = 2; //发送类别
       enum ValidateType { //发送类别枚举类
           Register = 1; //注册
           ChangePassword = 2; //修改密码
           ResetPassword = 3; //找回密码
       };
}

message ValidateCodeResponse {
       optional bool isSucceed = 1;
       optional ErrorCodeType errorCode = 2;
       enum ErrorCodeType {
           BadRequest = 1; //序列化参数出错
           InvalidPhoneNumber = 2; //手机号码有误
           InvalidType = 3; //发送类型有误
           ExistingUserYes = 4; //用户已存在
           ExistingUserNo = 5; //用户不存在
           LockTime = 6; //限定的时间内不能重复发送
           SendError = 7; //短信服务出错，发送失败
       };
}

message ClientInfo {
       optional string deviceId = 1;
       optional OSType osType = 2;
       optional string OSVersion = 3;
       optional int32 userId = 4;
       optional int32 channel = 5;
       optional string clientVersion = 6;
       optional bool isPushEnable = 7;	
       enum OSType {
           Others = 0;
           IOS = 1;
           Android = 2;
           WindowsPhone = 3;
           Symbian = 4;
       };
}

message ClientInfoRequest {
       optional int32 userId = 1;
       optional string token = 2;
       optional ClientInfo clientInfo = 3;
}

message ClientInfoResponse {
       optional bool isSucceed = 1;
       optional ErrorCodeType errorCode = 2;
       optional bool isNewVersionRequired = 3;
       optional string newClientVersion = 4;
       optional string clientUrl = 5;
       optional bool hasNewVersion = 6;

       enum ErrorCodeType {
           InvalidUserId = 1;
           InvalidToken = 2;
           AuthError = 3;
       };
}

message MessagePush {
       optional int32 senderId = 1;
       optional string senderName = 2;
       optional string content = 3;
       optional string contentType = 4;
       optional string sendTime = 5;
}

message NoticePush {
       // 暂不支持
}

message PushRequest {
       optional PushType pushType = 1;
       optional MessagePush messagePush = 2;
       optional NoticePush noticePush = 3;

       enum PushType {
           Message = 0;
           Notice = 1;
       };
}

